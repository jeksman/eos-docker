# the endpoint upon which to listen for incoming connections (eosio::bnet_plugin)
bnet-endpoint = 0.0.0.0:4321

# the number of threads to use to process network messages (eosio::bnet_plugin)
bnet-threads = 4

# this peer will request no pending transactions from other nodes (eosio::bnet_plugin)
bnet-no-trx = false

# the location of the blocks directory (absolute path or relative to application data dir) (eosio::chain_plugin)
blocks-dir = "blocks"

# Pairs of [BLOCK_NUM,BLOCK_ID] that should be enforced as checkpoints. (eosio::chain_plugin)
# checkpoint =

# Override default WASM runtime (eosio::chain_plugin)
# wasm-runtime =

# Maximum size (in MB) of the chain state database (eosio::chain_plugin)
chain-state-db-size-mb = 8192

# Maximum size (in MB) of the reversible blocks database (eosio::chain_plugin)
reversible-blocks-db-size-mb = 340

# print contract's output to console (eosio::chain_plugin)
contracts-console = false

# Account added to actor whitelist (may specify multiple times) (eosio::chain_plugin)
# actor-whitelist =

# Account added to actor blacklist (may specify multiple times) (eosio::chain_plugin)
# actor-blacklist =

# Contract account added to contract whitelist (may specify multiple times) (eosio::chain_plugin)
# contract-whitelist =

# Contract account added to contract blacklist (may specify multiple times) (eosio::chain_plugin)
# contract-blacklist =

# PEM encoded trusted root certificate (or path to file containing one) used to validate any TLS connections made.  (may specify multiple times)
#  (eosio::http_client_plugin)
# https-client-root-cert =

# true: validate that the peer certificates are valid and trusted, false: ignore cert errors (eosio::http_client_plugin)
https-client-validate-peers = 1

# The local IP and port to listen for incoming http connections; set blank to disable. (eosio::http_plugin)
http-server-address = 0.0.0.0:8888

# The local IP and port to listen for incoming https connections; leave blank to disable. (eosio::http_plugin)
# https-server-address =

# Filename with the certificate chain to present on https connections. PEM format. Required for https. (eosio::http_plugin)
# https-certificate-chain-file =

# Filename with https private key in PEM format. Required for https (eosio::http_plugin)
# https-private-key-file =

# Specify the Access-Control-Allow-Origin to be returned on each request. (eosio::http_plugin)
# access-control-allow-origin =

# Specify the Access-Control-Allow-Headers to be returned on each request. (eosio::http_plugin)
# access-control-allow-headers =

# Specify the Access-Control-Max-Age to be returned on each request. (eosio::http_plugin)
# access-control-max-age =

# Specify if Access-Control-Allow-Credentials: true should be returned on each request. (eosio::http_plugin)
access-control-allow-credentials = false

# The actual host:port used to listen for incoming p2p connections. (eosio::net_plugin)
p2p-listen-endpoint = 0.0.0.0:9876

# An externally accessible host:port for identifying this node. Defaults to p2p-listen-endpoint. (eosio::net_plugin)
# p2p-server-address =

# The public endpoint of a peer node to connect to. Use multiple p2p-peer-address options as needed to compose a network. (eosio::net_plugin)
# p2p-peer-address =

# Maximum number of client0nodes from any single IP address (eosio::net_plugin)
p2p-max-nodes-per-host = 1

# The name supplied to identify this node amongst the peers. (eosio::net_plugin)
agent-name = "EOS Mainnet Agent"

# Can be 'any' or 'producers' or 'specified' or 'none'. If 'specified', peer-key must be specified at least once. If only 'producers', peer-key is not required. 'producers' and 'specified' may be combined. (eosio::net_plugin)
allowed-connection = any

# Optional public key of peer allowed to connect.  May be used multiple times. (eosio::net_plugin)
# peer-key =

# Tuple of [PublicKey, WIF private key] (may specify multiple times) (eosio::net_plugin)
# peer-private-key =

# Maximum number of clients from which connections are accepted, use 0 for no limit (eosio::net_plugin)
max-clients = 100

# number of seconds to wait before cleaning up dead connections (eosio::net_plugin)
connection-cleanup-period = 30

# True to require exact match of peer network version. (eosio::net_plugin)
network-version-match = 1

# number of blocks to retrieve in a chunk from any individual peer during synchronization (eosio::net_plugin)
sync-fetch-span = 1000

# maximum sizes of transaction or block messages that are sent without first sending a notice (eosio::net_plugin)
max-implicit-request = 1500

# Enable block production, even if the chain is stale. (eosio::producer_plugin)
enable-stale-production = false

# Start this node in a state where production is paused (eosio::producer_plugin)
# pause-on-startup = false

# Limits the maximum time (in milliseconds) that is allowed a pushed transaction's code to execute before being considered invalid (eosio::producer_plugin)
max-transaction-time = 10000

# Limits the maximum age (in seconds) of the DPOS Irreversible Block for a chain this node will produce blocks on (use negative value to indicate unlimited) (eosio::producer_plugin)
max-irreversible-block-age = -1

# Percent of producers (0-100) that must be participating in order to produce blocks (eosio::producer_plugin)
required-participation = 33

# ID of producer controlled by this node (e.g. inita; may specify multiple times) (eosio::producer_plugin)
# producer-name =
# producer-name = eosio

# (DEPRECATED - Use signature-provider instead) Tuple of [public key, WIF private key] (may specify multiple times) (eosio::producer_plugin)
# private-key =

# Key=Value pairs in the form <public-key>=<provider-spec>
# Where:
#    <public-key>    	is a string form of a vaild EOSIO public key
#
#    <provider-spec> 	is a string in the form <provider-type>:<data>
#
#    <provider-type> 	is KEY, or KEOSD
#
#    KEY:<data>      	is a string form of a valid EOSIO private key which maps to the provided public key
#
#    KEOSD:<data>    	is the URL where keosd is available and the approptiate wallet(s) are unlocked (eosio::producer_plugin)
# signature-provider = EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV=KEY:5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3

# Limits the maximum time (in milliseconds) that is allowd for sending blocks to a keosd provider for signing (eosio::producer_plugin)
keosd-provider-timeout = 5

# Lag in number of blocks from the head block when selecting the reference block for transactions (-1 means Last Irreversible Block) (eosio::txn_test_gen_plugin)
txn-reference-block-lag = 0

# The path of the wallet files (absolute path or relative to application data dir) (eosio::wallet_plugin)
wallet-dir = "."

# Timeout for unlocked wallet in seconds (default 900 (15 minutes)). Wallets will automatically lock after specified number of seconds of inactivity. Activity is defined as any wallet command e.g. list-wallets. (eosio::wallet_plugin)
unlock-timeout = 900

# eosio key that will be imported automatically when a wallet is created. (eosio::wallet_plugin)
# eosio-key =

# Plugin(s) to enable, may be specified multiple times
# Delete what you don't want
# Plugins have cross-dependencies
# see https://developers.eos.io/eosio-nodeos/docs/history_api_plugin and so on
# plugin =
plugin = eosio::chain_plugin
plugin = eosio::net_plugin
plugin = eosio::bnet_plugin
plugin = eosio::http_plugin
plugin = eosio::history_plugin
plugin = eosio::wallet_plugin

plugin = eosio::chain_api_plugin
plugin = eosio::history_api_plugin
#plugin = eosio::net_api_plugin
#plugin = eosio::wallet_api_plugin

# Track actions which match receiver:action:actor. Actor may be blank to include all. Receiver and Action may not be blank. (eosio::history_plugin)
# filter-on =

# Endpoints
# For details on how this is generated see https://validate.eosnation.io/about/

# ==== bnet ====

# argentinaeos: AR, eosargentina
bnet-connect = api2.eosargentina.io:8880

# bpeosindexio: DE, Falkenstein
bnet-connect = node1.bp.eosindex.io:9875

# costaricaeos: CR, San Jose
bnet-connect = p2p.eosio.cr:20747

# costaricaeos: CR, San Jose
bnet-connect = p2p.eosio.cr:23881

# cryptolions1: DE, Germany-Finland
bnet-connect = bp.cryptolions.io:9875

# eosauthority: GB, London
bnet-connect = nodebnet-mainnet.eosauthority.com:19393

# eosfishrocks: HK, HongKong
bnet-connect = bnet.bp.fish:7756

# eosflareiobp: US, GlobalDAC
bnet-connect = node.eosflare.io:5222

# eosflytomars: JP, Tokyo
bnet-connect = p2p.bitmars.one:8881

# eosgenblockp: IS, Iceland
bnet-connect = eos.genesis-mining.com:14321

# eosiodetroit: US, EOS Detroit NP1
bnet-connect = p2p.eosdetroit.io:3019

# eosmesodotio: GT, Guatemala City
bnet-connect = node.eosmeso.io:4321

# eosnationftw: CA, Toronto
bnet-connect = peer.eosn.io:4321

# eosnigeriago: NG, Nigeria
bnet-connect = bp.eosnigeria.io:9875

# eosphereiobp: AU, Sydney, Australia
bnet-connect = peer1.eosphere.io:4321

# foodtokeneos: CA, Montreal, Canada
bnet-connect = mainnet.eos.foodtoken.io:9875

# franceosysbp: GB, London
bnet-connect = peer.franceos.fr:4321

# switzerlanda: CH, Geneva
bnet-connect = peer.eosgeneva.io:9877


# ==== p2p ====

# 1eostheworld: US, Texas
p2p-peer-address = pub1.eostheworld.io:9876

# acroeos12345: KR, Seoul, Korea
p2p-peer-address = seed.acroeos.one:9876

# activeeoscom: US, The Dalles, OR
p2p-peer-address = eos-mainnet-p2p.activeeos.com:9876

# alohaeosprod: GB, London
p2p-peer-address = peer.main.alohaeos.com:9876

# argentinaeos: AR, eosargentina
p2p-peer-address = p2p.eosargentina.io:5222

# aus1genereos: AU, Sydney
p2p-peer-address = p2p.genereos.io:9876

# bitspacenode: GB, London
p2p-peer-address = p2p.eos.bitspace.no:9876

# blockchained: DE, EOS BLCKCHND
p2p-peer-address = p2p.eos.blckchnd.com:19876

# blockgenesys: GB, London
p2p-peer-address = node1.blockgenesys.com:9876

# blockmatrix1: US, N. Virginia
p2p-peer-address = eosapi.blockmatrix.network:13546

# blocksmithio: US, Oklahoma
p2p-peer-address = anvil.eosblocksmith.io:9876

# bpeosindexio: DE, Falkenstein
p2p-peer-address = node1.bp.eosindex.io:9876

# buildteameos: ??, Nuremberg
p2p-peer-address = eosbp.buildteam.io:8532

# costaricaeos: CR, San Jose
p2p-peer-address = p2p.eosio.cr:1976

# costaricaeos: CR, San Jose
p2p-peer-address = p2p.eosio.cr:5418

# cryptolions1: DE, Germany-Finland
p2p-peer-address = bp.cryptolions.io:9876

# cypherglasss: US, Minneapolis, MN
p2p-peer-address = publicnode.cypherglass.com:9876

# eos42freedom: GB, London
p2p-peer-address = seed1.eos42.io:9876

# eos42freedom: GB, London
p2p-peer-address = seed2.eos42.io:9876

# eosafricaone: ZA, CPT
p2p-peer-address = peer.dpos.africa:9876

# eosamsterdam: DE, Saarbruecken
p2p-peer-address = mainnet.eosamsterdam.net:9876

# eosantpoolbp: SG, Singapore
p2p-peer-address = bp.antpool.com:443

# eosarabianet: DE, Munich
p2p-peer-address = mainnet.eosarabia.net:3571

# eosasia11111: TW, Changhua
p2p-peer-address = peering1.mainnet.eosasia.one:80

# eosasia11111: TW, Changhua
p2p-peer-address = peering2.mainnet.eosasia.one:80

# eosauthority: GB, London
p2p-peer-address = node869-mainnet.eosauthority.com:9393

# eosbeijingbp: JP, Tokyo
p2p-peer-address = bp.eosbeijing.one:8080

# eosbixinboot: CN, HongKong
p2p-peer-address = mars.fnp2p.eosbixin.com:443

# eoscafeblock: CA, Calgary
p2p-peer-address = mainnet.eoscalgary.io:5222

# eoscanadacom: CA, Montreal, Canada
p2p-peer-address = peering.mainnet.eoscanada.com:9876

# eoscannonchn: HK, Hong Kong
p2p-peer-address = node1.eoscannon.io:59876

# eoschaintech: CN, Unknown
p2p-peer-address = eoschaintech.net:19876

# eoscleanerbp: JP, okyo Node A-seed
p2p-peer-address = seed.eoscleaner.com:19876

# eosdacserver: RO, Bucharest
p2p-peer-address = eu.eosdac.io:49876

# eosdacserver: KR, Seoul
p2p-peer-address = as1.eosdac.io:49876

# eosdotwikibp: SG, Singapore
p2p-peer-address = api.eos.wiki:39876

# eosdublinwow: IE, Dublin
p2p-peer-address = eos-seed.eosdublin.io:9876

# eoseouldotio: KR, EOSSeoul-seed1
p2p-peer-address = api-full1.eoseoul.io:9876

# eoseouldotio: KR, EOSSeoul-seed2
p2p-peer-address = api-full2.eoseoul.io:9876

# eosfishrocks: HK, HongKong
p2p-peer-address = p2p.bp.fish:9786

# eosflareiobp: US, GlobalDAC
p2p-peer-address = node.eosflare.io:1883

# eosflytomars: JP, Tokyo
p2p-peer-address = p2p.bitmars.one:8080

# eosgenblockp: IS, Iceland
p2p-peer-address = eos.genesis-mining.com:19876

# eosgermanybp: DE, Falkenstein
p2p-peer-address = p2p.eosgermany.online:9876

# eoshenzhenio: CN, Shenzhen, China
p2p-peer-address = p2p.eoshenzhen.io:9876

# eoshenzhenio: CN, Shenzhen, China
p2p-peer-address = mainnet.eoshenzhen.io:8888

# eoshuobipool: CN, HuobiNode1
p2p-peer-address = peer1.eoshuobipool.com:18181

# eoshuobipool: CN, HuobiNode2
p2p-peer-address = peer2.eoshuobipool.com:18181

# eosimperabpi: IT, Italy
p2p-peer-address = eosimpera.com:9876

# eosiodetroit: US, EOS Detroit NP1
p2p-peer-address = p2p.eosdetroit.io:3018

# eosiomeetone: JP, Tokyo
p2p-peer-address = p2p.meet.one:9876

# eosisgravity: SG, Singapore
p2p-peer-address = p2p-mainnet.eosgravity.com:8001

# eoslambdacom: CN, Beijing
p2p-peer-address = fullnode.bp.lambda.im:9876

# eoslaomaocom: US, NewYork
p2p-peer-address = fullnode.eoslaomao.com:443

# eosliquideos: IL, Israel - Center
p2p-peer-address = node2.liquideos.com:9876

# eoslithuania: LT, Unknown
p2p-peer-address = node.eosio.lt:9878

# eosmedinodes: FR, Paris
p2p-peer-address = bp.eosmedi.com:9877

# eosmesodotio: GT, Guatemala City
p2p-peer-address = node.eosmeso.io:9876

# eosmetaliobp: IE, Ireland
p2p-peer-address = api1.eosmetal.io:19877

# eosnationftw: CA, Toronto
p2p-peer-address = peer.eosn.io:9876

# eosnewyorkio: BR, primary
p2p-peer-address = node1.eosnewyork.io:6987

# eosnigeriago: NG, Nigeria
p2p-peer-address = bp.eosnigeria.io:9876

# eosonoeosono: JP, Tokyo
p2p-peer-address = peer.ono.chat:9876

# eosorangeeos: CN, eosorangeoes
p2p-peer-address = eosorangeeos.com:9876

# eospaceioeos: US, LosAngelesSeed1
p2p-peer-address = p2p.mainnet.eospace.io:88

# eospacificbp: JP, Tokyo, Japan
p2p-peer-address = eos.nodepacific.com:9876

# eosphereiobp: AU, Sydney, Australia
p2p-peer-address = peer1.eosphere.io:9876

# eosphereiobp: AU, Sydney, Australia
p2p-peer-address = peer2.eosphere.io:9876

# eosriobrazil: BR, Rio de Janeiro
p2p-peer-address = br.eosrio.io:9876

# eossocalprod: US, California
p2p-peer-address = p2p.eossocal.io:9999

# eossv12eossv: US, Oregon
p2p-peer-address = fn001.eossv.org:443

# eosswedenorg: SE, Sweden
p2p-peer-address = p2p.eossweden.se:9876

# eosthushuimu: ??, Tokyo
p2p-peer-address = peer2.eosthu.com:8080

# eostitanprod: CA, Toronto
p2p-peer-address = boot.eostitan.com:9876

# eostribeprod: US, Cheyenne, WY
p2p-peer-address = api2.eostribe.io:9115

# eosukblocpro: GB, Nottingham
p2p-peer-address = api.eosuk.io:12000

# eosunion1111: ??, London
p2p-peer-address = mainnet1.eos.ren:9376

# eosvenezuela: VE, Unknown
p2p-peer-address = node.eosvenezuela.io:9875

# eosvibesbloc: ??, Gravelines
p2p-peer-address = node1.eosvibes.io:9876

# eoswinwinwin: JP, Tokyo
p2p-peer-address = peer.eos.win:9876

# eoswondersbp: CN, Shanghai
p2p-peer-address = node1.eoswonders.com:59876

# eosyskoreabp: KR, Seoul
p2p-peer-address = pub0.eosys.io:6637

# eosyskoreabp: KR, Seoul
p2p-peer-address = pub1.eosys.io:6637

# eoszonrussia: RU, Novosibirsk
p2p-peer-address = v.rito.su:9876

# foodtokeneos: CA, Montreal, Canada
p2p-peer-address = mainnet.eos.foodtoken.io:9876

# franceosysbp: GB, London
p2p-peer-address = peer2.franceos.fr:19876

# helloeoscnbp: JP, Tokyo
p2p-peer-address = peer2.mainnet.helloeos.com.cn:80

# hkeoshkeosbp: SG, Singapore
p2p-peer-address = p2p.hkeos.com:9876

# jedaaaaaaaaa: JP, Tokyo
p2p-peer-address = m.jeda.one:3322

# kunablockprd: UA, Ukraine
p2p-peer-address = eosbp.kuna.io:9876

# libertyblock: CA, Toronto, Canada
p2p-peer-address = mainnet.libertyblock.io:9800

# libertyblock: CA, Toronto, Canada
p2p-peer-address = p2p.libertyblock.io:9800

# moreisfuture: ??, Shenzhen
p2p-peer-address = peering.mainnet.more.top:443

# oasisproduce: CN, Beijing
p2p-peer-address = mainnet.eosoasis.io:9876

# onechaindapp: ??, chongqing
p2p-peer-address = eosdapp.oneeos.org:9000

# oraclegogogo: CN, Beijing
p2p-peer-address = peer.oraclechain.io:19876

# privexinceos: ??, Falkenstein
p2p-peer-address = eos-seed-de.privex.io:9876

# qxeosqxeosbp: CN, hangzhou
p2p-peer-address = 47.104.169.45:9876

# sheos21sheos: IE, Dublin
p2p-peer-address = p2p.proxy1a.sheos.org:5556

# stakedstaked: US, Virginia
p2p-peer-address = eos.staked.us:9870

# starteosiobp: US, Ohio
p2p-peer-address = node1.starteos.io:9876

# starteosiobp: JP, Tokyo
p2p-peer-address = node2.starteos.io:9876

# superoneiobp: CN, Shenzhen, China
p2p-peer-address = bp.superone.io:57576

# switzerlanda: CH, Geneva
p2p-peer-address = peer.eosgeneva.io:9876

# teamgreymass: GB, GB
p2p-peer-address = seed1.greymass.com:9876

# teamgreymass: US, US
p2p-peer-address = seed2.greymass.com:9876

# unlimitedeos: JP, Tokyo
p2p-peer-address = eos.unlimitedeos.com:15555

# zbeosbp11111: ??, ZBnode1
p2p-peer-address = node1.zbeos.com:9876

# zbeosbp11111: ??, ZBnode2
p2p-peer-address = node2.zbeos.com:9876